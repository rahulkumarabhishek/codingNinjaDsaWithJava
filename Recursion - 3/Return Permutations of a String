/*Return Permutations of a String
Send Feedback
Given a string, find and return all the possible permutations of the input string.
Note : The order of permutations are not important.
Sample Input :
abc
Sample Output :
abc
acb
bac
bca
cab
cba */

public class solution {

	private static String[] output ;
	private static int k = 0;
	
	public static String[] permutationOfString(String input){
		// Write your code here
		output = new String[factorial(input.length())];
		permute(input, 0, input.length()-1);
		return output;
	}

	private static void permute(String input,int l, int r){
		if(l==r){
			//System.out.println(input);
			output[k++] = input;
			return;
		}
		for(int i = l; i<=r;i++){
			input = swap(input, l, i);
			permute(input, l+1, r);
			//backtrack
			input = swap(input, l, i);
		}
	}
	
	private static String swap(String a, int i, int j) {
		char temp;
		char[] charArray = a.toCharArray();
		temp = charArray[i];
		charArray[i] = charArray[j];
		charArray[j] = temp;
		return String.valueOf(charArray);
	}

	private static int factorial(int n){
		if(n==1){
			return 1;
		}

		return n * factorial(n-1);

	}
}
